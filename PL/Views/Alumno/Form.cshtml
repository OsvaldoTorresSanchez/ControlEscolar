@model ML.Alumno
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Form</h2>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Alumnos</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h2>Ingrese los datos de los alumnos</h2>
        </div>
    </div>

    @using (Html.BeginForm("Form", "Alumno", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.IdAlumno, new { @class = "visually-hidden-focusable" })
                @Html.TextBoxFor(model => model.IdAlumno, new { @class = "form-control visually-hidden-focusable", @id = "txtIdAlumno" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Nombre)
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", placeholder = " Nombre", @onkeypress = "return ValidarSoloLetras(event,'lblNombre')", @id = "txtNombre" })
                @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "text-danger", @id = "lblNombre" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ApellidoPaterno)
                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", placeholder = " Apellido Paterno", @onkeypress = "return ValidarSoloLetras(event,'lblApellidoPaterno')", @id = "txtApellidoPaterno" })
                @Html.ValidationMessageFor(model => model.ApellidoPaterno, null, new { @class = "text-danger", @id = "lblApellidoPaterno" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ApellidoMaterno)
                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", placeholder = " Apellido Materno", @onkeypress = "return ValidarSoloLetras(event,'lblApellidoMaterno')", @id = "txtApellidoMaterno" })
                @Html.ValidationMessageFor(model => model.ApellidoMaterno, null, new { @class = "text-danger", @id = "lblApellidoMaterno" })
            </div>
        </div>


        <br />
        <div class="row">
            <div class="col-md-1">
                <button type="submit" class="btn btn-success"> Guardar</button>
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Cancelar", "GetAll", "Alumno", new { @class = "btn btn-danger" })
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    /*Solo letras*/
    function ValidarSoloLetras(event, controlId) {

        var letra = event.key;
        //var regexLetters = /^[A-Za-z\s]+$/;
        var regexLetters = /^[A-Za-z\s]$/;

        if (regexLetters.test(letra)) {
            $('#' + controlId).text("Valido");
            $('#' + controlId).css({ "color": "green" });
            return true;
        }
        else {
            $('#' + controlId).text(letra + "Solo acepta caracteres");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }

    }
</script>